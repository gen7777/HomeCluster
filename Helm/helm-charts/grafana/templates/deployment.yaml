{{- $checksumEnv := include (print $.Template.BasePath "/configmap.yaml") . | sha256sum -}}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.serviceName }}
  name: {{ .Values.serviceName }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.serviceName }}
  template:
    metadata:
      labels:
        app: {{ .Values.serviceName }}
# Autorestart
      annotations:
        checksum/grafana: {{ $checksumEnv }}
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          imagePullPolicy: IfNotPresent
          env:
{{- if .Values.plugins }}
            - name: GF_INSTALL_PLUGINS
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.serviceName }}
                  key: plugins
{{- end }}
          ports:
            - containerPort: {{ .Values.network.port }}
              name: {{ .Values.network.name }}
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: {{ .Values.network.port }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: {{ .Values.network.port }}
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          volumeMounts:
          - name: config-volume
            mountPath: /etc/grafana/grafana.ini
            subPath: grafana.ini
          - name: config-volume
            mountPath: /etc/grafana/ldap.toml
            subPath: ldap.toml
          - name: storage
            mountPath: "/var/lib/grafana"
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.serviceName }}
            items:
              - key: grafana.ini
                path: grafana.ini
              - key: ldap.toml
                path: ldap.toml
        - name: storage
          emptyDir: {}

---